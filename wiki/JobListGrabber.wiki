Cкрипт для считывания и парсинга вакансий. Заточен под [http://hh.ru]. Пригодится тем, кто ищет работу, тем, кто её предоставляем, а также статистикам и просто любопытным.

= Описание =

Написано на Python 3.2. Python 2.x не поддерживается. Избранные вакансии - поддерживаются. RegExp парсинга вакансии можно ещё дорабатывать (из 1 972 штук по запросу C++ скрылись от парсинга около 13%). Результат выводит на консоль в формате [http://ru.wikipedia.org/wiki/CSV CSV]. Не боится ошибки 500, 404 и всех прочих.

Энтузиасты могут оптимизировать его под другие сервисы, сделать многопоточную загрузку страниц для парсинга, или изменить вывод, добавить отправку заголовка и сделать сервис онлайновым. А вот делать парсинг в отдельном потоку не следует, потому что он происходит быстрее, чем загрузка страницы.

= Установка =

  * Качаем и ставим последний [http://python.org Python 3.x]
  * Если хотите править скрипт - качаем и ставим текстовый редактор с явной и доступной поддержкой Unicode. У меня [http://notepad-plus-plus.org/ Notepad++].
  * Создаём директорию, в который положим наш скрипт.
  * Скачиваем скрипт и кладём его в нужную директорию.
  * Если надо - дописываем его и исправляем.
  * Запускаем из командной строки, сбрасывая результат в файл с расширением CSV. Например, так: joblistgrabber.py > joblistresult.csv. Загрузка и парсинг для ~2000 записей у меня занимало примерно 2 минуты.
  * Получившийся joblistresult.csv открываем Excel-ом, сохраняем как обыкновенную книгу, а потом всячески обрабатываем. 
  

= Настройки =

== Вызывать одной строкой ==

  * Кладём скрипт в директорию

  * Добавляем название директорию в Path. Для этого идём (вариант для Windows XP, в следующих версиях надо после системы выбрать ещё "Дополнительные настройки") Панель Управления / Система / Дополнительно / Переменные среды / Системные переменные / PATH и дописываем в конец нашу директорию, отделив её ;.

  * *Перезагружаем компьютер*.

Теперь вместо d:\scripts\joblistgrabber.py можно писать просто joblistgrabber.py

== Настройки в самом скрипте ==

  * *searchUrl* - URL, с которого начинать поиск. Если надо искать с конкретного запроса, сделайте его в стандартном интерфейсе, скопируйте URL, который покажет вам браузер и замените в нём часть от text до ближайшего & на {0}, а от page до ближайшего & на {1}. Если page нет - добавьте в конец строки &page={1}. Например, _http://hh.ru/applicant/searchvacancyresult.xml?text=C%2B%2B&professionalAreaId=0&areaId=1422&areaId=1&desireableCompensation=&compensationCurrencyCode=RUR&experience=&orderBy=2&searchPeriod=30&itemsOnPage=20_ станет _http://hh.ru/applicant/searchvacancyresult.xml?text={1}&professionalAreaId=0&areaId=1422&areaId=1&desireableCompensation=&compensationCurrencyCode=RUR&experience=&orderBy=2&searchPeriod=30&itemsOnPage=20&page={1}_
   * *searchParam* - ключевое слово, по которому идёт поиск. Например, "C++" или "кровельщик"
   * *regExpElemSource* - RegExp для элементов вакансий. При желании можно улучшить существующий или написать свой.